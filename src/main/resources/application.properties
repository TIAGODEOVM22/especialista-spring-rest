spring.datasource.url=jdbc:mysql://localhost/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=einemStuck@2024

#Desabilitar Schema Generation para utilizarmos flyway
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create

#Em Produção não vamos ter esta propriedade porque ele vai rodar apenas as migrations.
spring.flyway.locations=classpath:db/migration, classpath:db/testdata

spring.jpa.show-sql=true
Spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

#garante que um atributo inexistente não seja serializado e lança uma exception de SINTAXE incorreta
spring.jackson.deserialization.fail-on-unknown-properties=true

#garante que o atributo anotado com @jsonignore, não seja desserializado, quando for passado no corpo da requisição
spring.jackson.deserialization.fail-on-ignored-properties=true

#se não tiver um cód para mapeado para aquela url eu quero que lance uma exception
spring.mvc.throw-exception-if-no-handler-found=true

#agora sim abilita a lançar a excepetion que queremos
spring.resources.add-mappings=false

#CONFIRANDO POOL DE CONEXOES COM HIKARI
#spring.datasource.hikari.maximum-pool-size=5
#spring.datasource.hikari.minimum-idle=3
#spring.datasource.hikari.idle-timeout=10000

#cria os scripts para serem usados nas migrations
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create

#cria um arquivo dentro da pasta resource
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql
